

#Module 7: S3 data

#data
library(dplyr)

data<-data.frame(c(0.6,	103,	"bad",	"low",	"low",
                   0.3,	87,	"bad",	"low",	"high",
                   0.4,	32,	"bad",	"high",	"low",
                   0.4,	42,	"bad",	"high",	"high",
                   0.2,	59,	"good",	"low",	"low",
                   0.6,	109,	"good",	"low",	"high",
                   0.3,	78,	"good",	"high",	"low",
                   0.4,	205,	"good",	"high",	"high",
                   0.9,	135,	"NA",	"high",	"high",
                   0.2,	176,	"bad",	"high",	"high"))

is.object(data)
isS4(data)



#added a column name to make it shorter than the default
colnames(data)<-(c("Names"))

#set freq=1 to start
freq=1

#there are 10 medical records, so each r is a medical record
#There are 5 variable that are all in a row, so 
#each variable will be read in one at a time

for (r in 1:10){
  
  
  data$Frequencies[r]<-data$Names[freq]
 # Freq<-(as.numeric(data$Frequencies[1:10]))
 # colnames(Freq)<-c("Frequency")
  freq<-freq+1
  
  data$BP[r]<-data$Names[freq]
 # BP<_(as.numeric(data$BP[1:10]))
 # colnames(BP)<-c("Blood Pressure")
  freq<-freq+1
  
  
  #the data for first, second and third
  # are characters (words) and the output
  #required are numbers. The if/else
  #statements read in what the word is
  #and changes it to a 0 or 1
  #depending on the criteria.
  #The instructions state to set
  #'good' to 0 and 'bad' to 1 for the variable
  #First
  
if(data$Names[freq]=="bad"){
  data$First[r]<-c(1)
}else if (data$Names[freq]=="good"){
    data$First[r]<-c(0)
  } else data$First[r]<-c("NA")
 # First<-as.numeric(data$First[1:10])
#  colnames(First)<-c("First Assessment")
  
  
  freq<-freq+1
  
if(data$Names[freq]=="low"){
  data$Second[r]<-c(0)
}else if (data$Name[freq]=="high"){
  data$Second[r]<-c(1)
}
  
 #data$Second[r]<-data$Names[freq]
 # Second<-as.numeric(data$Second[1:10])
#  colnames(Second)<-c("Second Assessment")
  freq<-freq+1
  
  if(data$Names[freq]=="low"){
    data$FinalDecision[r]<-c(0)
  }else if (data$Name[freq]=="high"){
    data$FinalDecision[r]<-c(1)
  }
  
  #data$FinalDecision[r]<-data$Names[freq]
 # FinalDecision<-as.numeric(data$FinalDecision[1:10])
#  colnames(FinalDecision)<-c("Final Decision")
  freq<-freq+1
  
}

FinalData<-cbind.data.frame(data$Frequencies[1:10],data$BP[1:10],data$First[1:10],
                      data$Second[1:10],data$FinalDecision[1:10])

is.na(FinalData)<-FinalData=="NA"
colnames(FinalData)<-c("Freq","BP","First","Second","FinalDecision")


FinalData$Freq<-as.numeric(FinalData$Freq)
FinalData$BP<-as.numeric(FinalData$BP)
FinalData$First<-as.numeric(FinalData$First)
FinalData$Second<-as.numeric(FinalData$Second)
FinalData$FinalDecision<- as.numeric(FinalData$FinalDecision)

typeof(FinalData)


## S4 data example from text book


### From book ###

x<-sample(10:20,50,replace=TRUE)

x


robSum<-function(obj){
  med<-median(obj)
  q1<-as.numeric(quantile(obj,probs=0.25))
  q3<-as.numeric(quantile(obj,probs=0.75))
  return(list(median=med,q1=q1,q3=q3))
  
}

rStats<-robSum(obj=x)



robustSummmary<-setClass("robustSummary",
                         slots=list(median="numeric",
                                    q1="numeric",
                                    q3="numeric"))


rStatsS4<-new("robustSummary",median=rStats$median,
              q1=rStats$q1,q3=rStats$q3)

isS4(rStatsS4)


rStatsS4

setMethod("show",
          "robustSummary",
          function(object){
            cat("The median is",object@median,
                "with First and Third Quartiles", object@q1,
                "and",object@q3)
          }
)

rStatsS4

show(rStatsS4)

rStatsS4

##  Abedin, J. (2017). Modern R programming cookbookâ€¯: recipes to simplify your statistical applications (1st edition). Packt Publishing.
